<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.javalab.board.repository.BoardRepository">

	 <!-- 게시물 목록 조회 -->
    <select id="getBoardList" resultMap="BoardResultMap">
        SELECT 
            b.board_no, 
            b.title, 
            b.content, 
            b.member_id, 
            b.hit_no, 
            b.reg_date,  
            b.rating,
            b.spoiler,
            m.movie_id,
            m.name AS movie_name,
            m.description AS movie_description,
            m.movie_date,
            m.reg_date AS movie_reg_date,
            m.genre,
            m.running_time,
            m.rating AS movie_rating,
            m.age_rating,
            m.director,
            m.cast,
            i.img_path,
            i.file_name
        FROM board b
        LEFT JOIN movie m ON b.movie_id = m.movie_id
        LEFT JOIN prod_img i ON m.movie_id = i.movie_id AND i.is_main = 0
        ORDER BY b.reg_date DESC    
    </select>

	<!-- 게시물 목록 페이징 및 검색 -->
    <select id="getBoardListPaging" parameterType="Criteria" resultMap="BoardResultMap">
        SELECT * FROM (
            SELECT 
                b.board_no, 
                b.title, 
                b.member_id, 
                b.hit_no, 
                b.reg_date, 
                b.reply_group, 
                b.reply_order, 
                b.reply_indent,
                b.spoiler,
                m.movie_id,
                m.name AS movie_name,
                ROW_NUMBER() OVER (ORDER BY b.reply_group DESC, b.reply_order ASC, b.reply_indent ASC) AS rnum
            FROM board b
            LEFT JOIN movie m ON b.movie_id = m.movie_id
            <where>
                <if test="searchText != null and searchText != ''">
                    b.title LIKE '%' || #{searchText} || '%' 
                    OR b.content LIKE '%' || #{searchText} || '%'
                    OR m.name LIKE '%' || #{searchText} || '%'
                </if>
            </where>
        )
        WHERE rnum BETWEEN ((#{pageNum} - 1) * #{amount} + 1) AND (#{pageNum} * #{amount})
    </select>

	 <!-- 게시물 상세 조회 -->
    <select id="getBoard" parameterType="int" resultMap="BoardResultMap">
        SELECT 
            b.board_no, 
            b.title, 
            b.content, 
            b.member_id, 
            b.hit_no,
            b.reg_date,
            b.reply_group,
            b.reply_order,
            b.reply_indent,  
            b.rating,
            b.spoiler,
            m.movie_id,
            m.name AS movie_name,
            m.description AS movie_description,
            m.movie_date,
            m.reg_date AS movie_reg_date,
            m.genre,
            m.running_time,
            m.rating AS movie_rating,
            m.age_rating,
            m.director,
            m.cast,
            i.img_path,
            i.file_name
        FROM board b
        LEFT JOIN movie m ON b.movie_id = m.movie_id
        LEFT JOIN prod_img i ON m.movie_id = i.movie_id AND i.is_main = 0
        WHERE b.board_no = #{boardNo}
    </select>

    <!-- ResultMap 정의 -->
<resultMap id="BoardResultMap" type="BoardVo">
        <id property="boardNo" column="board_no"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="memberId" column="member_id"/>
        <result property="hitNo" column="hit_no"/>
        <result property="regDate" column="reg_date"/>
        <result property="replyGroup" column="reply_group"/>
        <result property="replyOrder" column="reply_order"/>
        <result property="replyIndent" column="reply_indent"/>
        <result property="rating" column="rating"/>
        <result property="spoiler" column="spoiler"/>
        <association property="movieWithImage" javaType="MovieWithImageVo">
            <id property="movieId" column="movie_id"/>
            <result property="name" column="movie_name"/>
            <result property="description" column="movie_description"/>
            <result property="movieDate" column="movie_date"/>
            <result property="regDate" column="movie_reg_date"/>
            <result property="genre" column="genre"/>
            <result property="runningTime" column="running_time"/>
            <result property="rating" column="movie_rating"/>
            <result property="ageRating" column="age_rating"/>
            <result property="director" column="director"/>
            <result property="cast" column="cast"/>
            <result property="imgPath" column="img_path"/>
            <result property="fileName" column="file_name"/>
        </association>
    </resultMap>
    
	<!-- 조회수 증가 -->
	<update id="increaseHitNo" parameterType="int">
		UPDATE board
		SET hit_no = hit_no + 1
		WHERE board_no = #{boardNo}
	</update>

	<!-- 전체 게시물 수 조회 -->
	<select id="getTotalBoardCount" parameterType="Criteria" resultType="int">
		SELECT COUNT(*)
		FROM BOARD
		<where>
			<if test="searchText != null">
				TITLE LIKE '%'||#{searchText}||'%' OR CONTENT LIKE '%'||#{searchText}||'%'
			</if>
		</where>
	</select>

	<!-- 게시물 등록 -->
    <insert id="insertBoard" parameterType="BoardVo">
        INSERT INTO board(
            board_no,
            title, 
            content, 
            member_id, 
            hit_no,
            reg_date,
            reply_group, 
            reply_order, 
            reply_indent,  
            rating,
            spoiler,
            movie_id
        )
        VALUES (
            board_seq.nextval,
            #{title}, 
            #{content}, 
            #{memberId}, 
            0,
            sysdate,
            #{replyGroup},
            #{replyOrder},
            #{replyIndent},
            #{rating},
            #{spoiler},
            #{movieWithImage.movieId}
        )
    </insert>

    <!-- 게시물 수정 -->
    <update id="updateBoard" parameterType="BoardVo">
        UPDATE board
        SET title = #{title},
            content = #{content},
            rating = #{rating},
            spoiler = #{spoiler},
            movie_id = #{movieWithImage.movieId}
        WHERE board_no = #{boardNo}
    </update>

	<!-- 답글 순서 조정 -->
	<update id="updateReplyOrder" parameterType="BoardVo">
		UPDATE board
		SET reply_order = reply_order + 1
		WHERE reply_group = #{replyGroup} AND reply_order >= #{replyOrder}
	</update>

	<!-- 답글 등록 -->
	<insert id="insertReply" parameterType="BoardVo">
		INSERT INTO board (
			board_no, 
			title, 
			content, 
			member_id, 
			hit_no, 
			reg_date, 
			reply_group, 
			reply_order, 
			reply_indent,
			spoiler
		) VALUES (
			board_seq.NEXTVAL, 
			#{title}, 
			#{content}, 
			#{memberId}, 
			0, 
			SYSDATE, 
			#{replyGroup}, 
			#{replyOrder}, 
			#{replyIndent},
			#{spoiler}
		)
	</insert>


	<!-- 게시물 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		DELETE FROM board
		WHERE board_no = #{boardNo}
	</delete>

</mapper>
